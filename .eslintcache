[{"D:\\code\\apps\\js\\troy-huh.github.io\\src\\App.js":"1","D:\\code\\apps\\js\\troy-huh.github.io\\src\\components\\WPM.js":"2","D:\\code\\apps\\js\\troy-huh.github.io\\src\\components\\Input.js":"3","D:\\code\\apps\\js\\troy-huh.github.io\\src\\index.js":"4"},{"size":846,"mtime":1606562182805,"results":"5","hashOfConfig":"6"},{"size":338,"mtime":1606561082869,"results":"7","hashOfConfig":"6"},{"size":1658,"mtime":1606562836495,"results":"8","hashOfConfig":"6"},{"size":168,"mtime":1606561612012,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"b3ps0l",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\apps\\js\\troy-huh.github.io\\src\\App.js",["20","21"],"D:\\code\\apps\\js\\troy-huh.github.io\\src\\components\\WPM.js",["22","23"],"import React from 'react';\nimport './WPM.css';\n\nclass WPM extends React.Component {\n  render() {\n    return (\n      <h1 className='WPM' id='wrapper'>\n        <a style={{ color: this.props.WPM > 150 ? 'green' : 'red'}} id='left'>{Math.round(this.props.WPM)}</a>\n        <a id='right'> NPM</a>\n      </h1>\n    );\n  }\n}\n\nexport default WPM;\n","D:\\code\\apps\\js\\troy-huh.github.io\\src\\components\\Input.js",["24","25","26"],"import React from 'react';\n\nimport './Input.css';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inp: '',\n      startTime: 0\n    };\n\n    this.changeGuideText = this.changeGuideText.bind(this);\n    this.getGuideText = this.getGuideText.bind(this);\n    this.getInpText = this.getInpText.bind(this);\n  }\n\n  changeGuideText(new_inp) {\n    if (new_inp.length == 1) {\n      this.setState({\n        startTime: Date.now()\n      });\n    }\n    this.setState({\n      inp: new_inp.length <= 65 ? new_inp : ''\n    });\n\n    const elapsedTimeMinutes = (Date.now() - this.state.startTime) / 60000\n    this.props.calculateWPM(new_inp, elapsedTimeMinutes);\n  }\n\n  getGuideText() {\n    const originalGuideText = 'nigger'.repeat(11)\n    return (\n      <div id='wrapper'>\n        {originalGuideText.slice(0, this.state.inp.length).split('').map((s, i) => {\n          return <span style={{ color: this.state.inp.charAt(i) == s ? 'green' : 'red' }} id='wrapItem'>{`${s}`}</span>\n        })}\n        {originalGuideText.slice(this.state.inp.length).split('').map(s => {\n          return <span style={{ color: 'black' }} id='wrapItem'>{`${s}`}</span>\n        })}\n      </div>\n    );\n  }\n\n  getInpText() {\n    return this.state.inp;\n  }\n\n  render() {\n    return (\n      <a>\n        <form>\n          <input\n            type='text'\n            value={this.getInpText()}\n            className='question'\n            onChange={e => this.changeGuideText(e.target.value)} />\n          <label for='nme'>\n            <span>{this.getGuideText()}</span>\n          </label>\n        </form>\n      </a>\n    );\n  }\n}\n\nexport default Input;\n","D:\\code\\apps\\js\\troy-huh.github.io\\src\\index.js",[],{"ruleId":"27","severity":1,"message":"28","line":2,"column":10,"nodeType":"29","messageId":"30","endLine":2,"endColumn":28},{"ruleId":"31","severity":1,"message":"32","line":23,"column":25,"nodeType":"33","messageId":"34","endLine":23,"endColumn":27},{"ruleId":"35","severity":1,"message":"36","line":8,"column":9,"nodeType":"37","endLine":8,"endColumn":79},{"ruleId":"35","severity":1,"message":"36","line":9,"column":9,"nodeType":"37","endLine":9,"endColumn":23},{"ruleId":"31","severity":1,"message":"38","line":20,"column":24,"nodeType":"33","messageId":"34","endLine":20,"endColumn":26},{"ruleId":"31","severity":1,"message":"38","line":38,"column":65,"nodeType":"33","messageId":"34","endLine":38,"endColumn":67},{"ruleId":"35","severity":1,"message":"36","line":53,"column":7,"nodeType":"37","endLine":53,"endColumn":10},"no-unused-vars","'renderIntoDocument' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '===' and instead saw '=='."]