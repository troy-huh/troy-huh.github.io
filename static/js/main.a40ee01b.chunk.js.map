{"version":3,"sources":["components/Input.js","components/WPM.js","App.js","index.js"],"names":["Input","props","state","inp","startTime","changeGuideText","bind","getGuideText","new_inp","length","this","setState","Date","now","elapsedTimeMinutes","calculateWPM","originalGuideText","repeat","id","slice","split","map","s","i","style","color","charAt","type","className","onChange","e","target","value","for","React","Component","WPM","Math","round","App","time","correct","total","ReactDOM","render","document","getElementById"],"mappings":"gTA8DeA,G,oEAzDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,IAAK,GACLC,UAAW,GAGb,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATH,E,4DAYHE,GACQ,GAAlBA,EAAQC,QACVC,KAAKC,SAAS,CACZP,UAAWQ,KAAKC,QAGpBH,KAAKC,SAAS,CACZR,IAAKK,IAGP,IAAMM,GAAsBF,KAAKC,MAAQH,KAAKR,MAAME,WAAa,IACjEM,KAAKT,MAAMc,aAAaP,EAASM,K,qCAGnB,IAAD,OACPE,EAAoB,SAASC,OAAO,IAC1C,OACE,sBAAKC,GAAG,UAAR,UACGF,EAAkBG,MAAM,EAAGT,KAAKR,MAAMC,IAAIM,QAAQW,MAAM,IAAIC,KAAI,SAACC,EAAGC,GACnE,OAAO,sBAAMC,MAAO,CAAEC,MAAO,EAAKvB,MAAMC,IAAIuB,OAAOH,IAAMD,EAAI,QAAU,OAASJ,GAAG,WAA5E,mBAA2FI,QAEnGN,EAAkBG,MAAMT,KAAKR,MAAMC,IAAIM,QAAQW,MAAM,IAAIC,KAAI,SAAAC,GAC5D,OAAO,sBAAME,MAAO,CAAEC,MAAO,SAAWP,GAAG,WAApC,mBAAmDI,a,+BAMxD,IAAD,OACP,OACE,4BACE,iCACE,uBACEK,KAAK,OACLC,UAAU,WACVC,SAAU,SAAAC,GAAC,OAAI,EAAKzB,gBAAgByB,EAAEC,OAAOC,UAC/C,uBAAOC,IAAI,MAAX,SACE,+BAAOvB,KAAKH,4B,GAlDJ2B,IAAMC,YCUXC,G,6KATX,OACE,qBAAIR,UAAU,MAAMV,GAAG,UAAvB,UACE,mBAAGM,MAAO,CAAEC,MAAOf,KAAKT,MAAMmC,IAAM,IAAM,QAAU,OAAQlB,GAAG,OAA/D,SAAuEmB,KAAKC,MAAM5B,KAAKT,MAAMmC,OAC7F,mBAAGlB,GAAG,QAAN,yB,GALUgB,IAAMC,YCuCTI,E,kDAlCb,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IAEDc,aAAe,EAAKA,aAAaT,KAAlB,gBAEpB,EAAKJ,MAAQ,CACXkC,IAAK,GANU,E,yDAUNjC,EAAKqC,GAGhB,IAFA,IAAMC,EAAU,SAASxB,OAAO,IAC5ByB,EAAQvC,EAAIM,OAAS,EAChBc,EAAI,EAAGA,EAAIpB,EAAIM,OAAQc,IAC1BpB,EAAIuB,OAAOH,IAAMkB,EAAQf,OAAOH,KAClCmB,GAAS,EAAI,GAIjBhC,KAAKC,SAAS,CACZyB,IAAKM,EAAQF,M,+BAIP,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CAAKJ,IAAK1B,KAAKR,MAAMkC,MACrB,cAAC,EAAD,CAAOrB,aAAc,SAACZ,EAAKqC,GAAN,OAAe,EAAKzB,aAAaZ,EAAKqC,a,GA7BjDN,IAAMC,WCFxBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a40ee01b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Input.css';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inp: '',\n      startTime: 0\n    };\n\n    this.changeGuideText = this.changeGuideText.bind(this);\n    this.getGuideText = this.getGuideText.bind(this);\n  }\n\n  changeGuideText(new_inp) {\n    if (new_inp.length == 1) {\n      this.setState({\n        startTime: Date.now()\n      });\n    }\n    this.setState({\n      inp: new_inp\n    });\n\n    const elapsedTimeMinutes = (Date.now() - this.state.startTime) / 60000\n    this.props.calculateWPM(new_inp, elapsedTimeMinutes);\n  }\n\n  getGuideText() {\n    const originalGuideText = 'nigger'.repeat(11)\n    return (\n      <div id='wrapper'>\n        {originalGuideText.slice(0, this.state.inp.length).split('').map((s, i) => {\n          return <span style={{ color: this.state.inp.charAt(i) == s ? 'green' : 'red' }} id='wrapItem'>{`${s}`}</span>\n        })}\n        {originalGuideText.slice(this.state.inp.length).split('').map(s => {\n          return <span style={{ color: 'black' }} id='wrapItem'>{`${s}`}</span>\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <a>\n        <form>\n          <input\n            type='text'\n            className='question'\n            onChange={e => this.changeGuideText(e.target.value)} />\n          <label for='nme'>\n            <span>{this.getGuideText()}</span>\n          </label>\n        </form>\n      </a>\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react';\nimport './WPM.css';\n\nclass WPM extends React.Component {\n  render() {\n    return (\n      <h1 className='WPM' id='wrapper'>\n        <a style={{ color: this.props.WPM > 150 ? 'green' : 'red'}} id='left'>{Math.round(this.props.WPM)}</a>\n        <a id='right'> NPM</a>\n      </h1>\n    );\n  }\n}\n\nexport default WPM;\n","import React from 'react';\nimport { renderIntoDocument } from 'react-dom/test-utils';\nimport './App.css';\n\nimport Input from './components/Input';\nimport WPM from './components/WPM';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateWPM = this.calculateWPM.bind(this);\n\n    this.state = {\n      WPM: 0\n    }\n  }\n\n  calculateWPM(inp, time) {\n    const correct = 'nigger'.repeat(11);\n    let total = inp.length / 6;\n    for (let i = 0; i < inp.length; i++) {\n      if (inp.charAt(i) != correct.charAt(i)) {\n        total -= 1 / 6;\n      }\n    }\n\n    this.setState({\n      WPM: total / time\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <WPM WPM={this.state.WPM} />\n        <Input calculateWPM={(inp, time) => this.calculateWPM(inp, time)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}