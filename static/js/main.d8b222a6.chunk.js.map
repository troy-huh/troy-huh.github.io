{"version":3,"sources":["components/Input.js","components/WPM.js","App.js","index.js"],"names":["Input","props","possibleGuideWords","state","possibleEasterEggTriggers","map","e","slice","length","inp","startTime","guideWord","changeGuideText","bind","getGuideText","getInpText","escEvent","event","keyCode","this","setState","calculateWPM","document","addEventListener","removeEventListener","new_inp","Date","now","easterEgg","includes","indexOf","elapsedTimeMinutes","originalGuideText","repeat","Math","round","id","split","s","i","style","color","charAt","type","value","className","onChange","target","for","React","Component","WPM","toUpperCase","App","time","guideWordLength","correct","total","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d8b222a6.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Input.css';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const possibleGuideWords = ['nigger', 'kaleb', 'max', 'arveen', 'joon', 'brian']\n    this.state = {\n      possibleGuideWords: possibleGuideWords,\n      possibleEasterEggTriggers: possibleGuideWords.map(e => e.slice(0, e.length - 1)),\n      inp: '',\n      startTime: 0,\n      guideWord: 'nigger'\n    };\n\n    this.changeGuideText = this.changeGuideText.bind(this);\n    this.getGuideText = this.getGuideText.bind(this);\n    this.getInpText = this.getInpText.bind(this);\n    this.escEvent = this.escEvent.bind(this);\n  }\n\n  escEvent(event) {\n    if (event.keyCode === 27) {\n      this.setState({\n        inp: ''\n      });\n    }\n    this.props.calculateWPM(this.state.guideWord, this.state.inp, 1);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.escEvent, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.escEvent, false);\n  }\n\n  changeGuideText(new_inp) {\n    this.setState({\n      inp: (new_inp.length < 66 - (66 % this.state.guideWord.length)) ? new_inp : ''\n    });\n    if (this.state.inp.length === 0 || this.state.inp.length === 1) {\n      this.setState({\n        startTime: Date.now(),\n        easterEgg: ''\n      });\n    }\n    if (this.state.possibleEasterEggTriggers.includes(this.state.inp)) {\n      this.setState({\n        guideWord: this.state.possibleGuideWords[this.state.possibleEasterEggTriggers.indexOf(this.state.inp)]\n      });\n    }\n\n    const elapsedTimeMinutes = (Date.now() - this.state.startTime) / 60000;\n    this.props.calculateWPM(this.state.guideWord, this.state.inp, elapsedTimeMinutes);\n  }\n\n  getGuideText() {\n    const originalGuideText = this.state.guideWord.repeat(Math.round(66 / this.state.guideWord.length))\n    return (\n      <div id='wrapper'>\n        {originalGuideText.slice(0, this.state.inp.length).split('').map((s, i) => {\n          return <span style={{ color: this.state.inp.charAt(i) === s ? 'green' : 'red' }} id='wrapItem'>{`${s}`}</span>\n        })}\n        {originalGuideText.slice(this.state.inp.length).split('').map(s => {\n          return <span style={{ color: 'black' }} id='wrapItem'>{`${s}`}</span>\n        })}\n      </div>\n    );\n  }\n\n  getInpText() {\n    return this.state.inp;\n  }\n\n  render() {\n    return (\n      <a>\n        <form>\n          <input\n            type='text'\n            value={this.getInpText()}\n            className='question'\n            onChange={e => this.changeGuideText(e.target.value)} />\n          <label for='nme'>\n            <span>{this.getGuideText()}</span>\n          </label>\n        </form>\n      </a>\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react';\nimport './WPM.css';\n\nclass WPM extends React.Component {\n  render() {\n    return (\n      <h1 className='WPM' id='wrapper'>\n        <a style={{ color: this.props.WPM > 150 ? 'green' : 'red'}} id='left'>{Math.round(this.props.WPM)}</a>\n        <a id='right'> {`${this.props.guideWord.charAt(0).toUpperCase()}PM`}</a>\n      </h1>\n    );\n  }\n}\n\nexport default WPM;\n","import React from 'react';\nimport './App.css';\n\nimport Input from './components/Input';\nimport WPM from './components/WPM';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateWPM = this.calculateWPM.bind(this);\n\n    this.state = {\n      WPM: 0,\n      guideWord: 'nigger'\n    }\n  }\n\n  calculateWPM(guideWord, inp, time) {\n    this.setState({\n      guideWord: guideWord\n    })\n    const guideWordLength = this.state.guideWord.length\n\n    const correct = this.state.guideWord.repeat(13)\n    let total = inp.length / guideWordLength\n    for (let i = 0; i < inp.length; i++) {\n      if (inp.charAt(i) !== correct.charAt(i)) {\n        total -= 1 / guideWordLength\n      }\n    }\n\n    this.setState({\n      WPM: total / time\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <WPM WPM={this.state.WPM} guideWord={this.state.guideWord} />\n        <Input calculateWPM={(guideWord, inp, time) => this.calculateWPM(guideWord, inp, time)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}